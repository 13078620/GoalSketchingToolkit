<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <!-- ~Class: Goal ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->	
    <xs:element name="Goal" type="Goal"/>
    <xs:complexType name="Goal">
        <xs:sequence>
            <xs:element name="root" type="xs:string" minOccurs="0"/>
            <xs:element name="height" type="xs:int" minOccurs="0"/>
            <xs:element name="width" type="xs:int" minOccurs="0"/>
            <xs:element name="y" type="xs:int" minOccurs="0"/>
            <xs:element name="x" type="xs:int" minOccurs="0"/>
            <xs:element name="ID" type="xs:string" minOccurs="0"/>
            <xs:element name="Proposition" type="Proposition" minOccurs="1"/>
            <xs:element name="Fit" type="xs:string" minOccurs="0"/>
            <xs:choice>                            
                <xs:element name="ANDentailment" type="ANDentailment" minOccurs="0"/>
                <xs:element name="ORentailment" type="ORentailment" minOccurs="0"/>
            </xs:choice>
            <xs:element name="OperationalizingProducts" type="OperationalizingProducts" minOccurs="0"/>
            <xs:element name="AssumptionTermination" type="AssumptionTermination" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>	 
	
    <!-- ~Class: Proposition ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="Proposition" type="Proposition"/>
    <xs:complexType name="Proposition">
        <xs:sequence>
            <xs:element name="Prefix" type="GoalType" minOccurs="0"/>
            <xs:element name="Statement" minOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:pattern value="([a-zA-Z0-9\s.])+"/>						
                        <xs:whiteSpace value="replace"/>
                        <xs:minLength value="0"/>
                        <xs:maxLength value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="Context" type="xs:string" minOccurs="0"/>
            <xs:element ref="Annotations" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>	
	
    <!-- ~Enumeration: GoalType ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="GoalType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="/m/"/>
            <xs:enumeration value="/b/"/>
            <xs:enumeration value="/c/"/>
            <xs:enumeration value="/a/"/>
            <xs:enumeration value="/o/"/>
        </xs:restriction>
    </xs:simpleType>
	
    <!-- ~Class: Annotations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="Annotations" type="Annotations"/>
    <xs:complexType name="Annotations">
        <xs:sequence>
            <xs:element ref="Annotation" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
	
    <!-- ~Class: Annotation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="Annotation" type="Annotation"/>
    <xs:complexType name="Annotation">  
        <xs:sequence>
            <xs:element name="height" type="xs:int" minOccurs="0"/>
            <xs:element name="width" type="xs:int" minOccurs="0"/>
            <xs:element name="y" type="xs:int" minOccurs="0"/>
            <xs:element name="x" type="xs:int" minOccurs="0"/>                                           
            <xs:choice>
                <xs:element ref="GoalJudgement" maxOccurs="unbounded"/>
                <xs:element ref="LeafJudgement" maxOccurs="unbounded"/>
                <xs:element ref="AssumptionJudgement" maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
	
    <!-- ~Class: GoalJudgement ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="GoalJudgement" type="GoalJudgement"/>
    <xs:complexType name="GoalJudgement">
        <xs:sequence>
            <xs:element name="Refine" type="OrdinalScale" minOccurs="1"/>
            <xs:element name="Engage" type="OrdinalScale" minOccurs="1"/>
            <xs:element name="Value" minOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:pattern value="[1-9][0-9]?|100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
	
    <!-- ~Class: LeafJudgement ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="LeafJudgement" type="LeafJudgement"/>
    <xs:complexType name="LeafJudgement">
        <xs:sequence>
            <xs:element name="Achieve" type="OrdinalScale" minOccurs="1"/>
            <xs:element name="Cost" minOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:pattern value="[1-9][0-9]?|100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>	
    </xs:complexType>
	
    <!-- ~Class: AssumptionJudgement ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="AssumptionJudgement" type="AssumptionJudgement"/>
    <xs:complexType name="AssumptionJudgement">  
        <xs:sequence>
            <xs:element name="Assume" type="OrdinalScale" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
	
    <!-- ~Enumeration: OrdinalScale ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:simpleType name="OrdinalScale">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="LOW"/>
            <xs:enumeration value="MEDIUM"/>
            <xs:enumeration value="HIGH"/>
        </xs:restriction>
    </xs:simpleType>	
	
    <!-- ~Class: ANDentailment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="ANDentailment" type="ANDentailment"/>
    <xs:complexType name="ANDentailment">
        <xs:sequence>
            <xs:element name="toY" type="xs:int" minOccurs="0"/>
            <xs:element name="toX" type="xs:int" minOccurs="0"/> 
            <xs:element name="y" type="xs:int" minOccurs="0"/>
            <xs:element name="x" type="xs:int" minOccurs="0"/>
            <xs:choice maxOccurs="unbounded">
                <xs:element ref="Goal" maxOccurs="unbounded" minOccurs="0"/>
                <xs:element ref="Twin" maxOccurs="unbounded" minOccurs="0"/>
            </xs:choice>
        </xs:sequence>		
    </xs:complexType>
        
    <!-- ~Class: ORentailment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="ORentailment" type="ORentailment"/>
    <xs:complexType name="ORentailment">
        <xs:sequence>
            <xs:element name="toY2" type="xs:int" minOccurs="0"/>
            <xs:element name="toX2" type="xs:int" minOccurs="0"/>
            <xs:element name="toY" type="xs:int" minOccurs="0"/>
            <xs:element name="toX" type="xs:int" minOccurs="0"/> 
            <xs:element name="y" type="xs:int" minOccurs="0"/>
            <xs:element name="x" type="xs:int" minOccurs="0"/> 
            <xs:choice maxOccurs="2">
                <xs:element ref="Goal" maxOccurs="unbounded" minOccurs="1"/>
                <xs:element ref="Twin" maxOccurs="unbounded" minOccurs="1"/>
            </xs:choice>
        </xs:sequence>		
    </xs:complexType>         	 
	
    <!-- ~Class: OperationalizingProducts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->	
    <xs:element name="OperationalizingProducts" type="OperationalizingProducts"/>	
    <xs:complexType name="OperationalizingProducts">
        <xs:sequence>
            <xs:element name="height" type="xs:int" minOccurs="0"/>
            <xs:element name="width" type="xs:int" minOccurs="0"/>
            <xs:element name="y" type="xs:int" minOccurs="0"/>
            <xs:element name="x" type="xs:int" minOccurs="0"/>
            <xs:element name="Operationalizer" type="xs:string" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>	
    
    <!-- ~Class: Twin ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="Twin" type="Twin"/>
    <xs:complexType name="Twin">
        <xs:sequence>
            <xs:element name="height" type="xs:int" minOccurs="0"/>
            <xs:element name="width" type="xs:int" minOccurs="0"/>
            <xs:element name="y" type="xs:int" minOccurs="0"/>
            <xs:element name="x" type="xs:int" minOccurs="0"/>
            <xs:element name="ID" type="xs:string" minOccurs="0"/>
            <xs:element name="Proposition" type="Proposition" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
	
    <!-- ~Class: AssumptionTermination ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="AssumptionTermination" type="AssumptionTermination"/>
    <xs:complexType name="AssumptionTermination">
        <xs:sequence>
            <xs:element name="height" type="xs:int" minOccurs="0"/>
            <xs:element name="width" type="xs:int" minOccurs="0"/>
            <xs:element name="y" type="xs:int" minOccurs="0"/>
            <xs:element name="x" type="xs:int" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>		
	
    <!-- ~Class: Graph ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <xs:element name="Graph" type="Graph"/>
    <xs:complexType name="Graph">
        <xs:sequence>
            <xs:element ref="Goal" minOccurs="0"/>
        </xs:sequence> 
    </xs:complexType>
	
</xs:schema>  		 